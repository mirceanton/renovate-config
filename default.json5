{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "timezone": "Europe/Bucharest",
    "dependencyDashboard": true,
    "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
    "semanticCommits": "enabled",
    "commitBodyTable": true,
    "rebaseWhen": "auto",
    "autodiscover": true,
    "gitAuthor": "mr-borboto[bot] <170036086+mr-borboto[bot]@users.noreply.github.com>",
    "extends": [
        ":disableRateLimiting",
        "config:recommended",
        "helpers:pinGitHubActionDigests",
        "github>mirceanton/renovate-config//custom-manager-mise.json5",
        "github>mirceanton/renovate-config//custom-manager-github-links.json5",
        "github>mirceanton/renovate-config//custom-manager-yaml.json5"
    ],
    "packageRules": [
        // Auto Merge Types
        { "matchUpdateTypes": ["minor", "patch", "digest"], "automerge": true, "automergeType": "branch" },
        { "matchUpdateTypes": ["major"], "automerge": false, "automergeType": "pr" },

        // Type Labels
        { "matchUpdateTypes": ["major"], "labels": ["type/major"] },
        { "matchUpdateTypes": ["minor"], "labels": ["type/minor"] },
        { "matchUpdateTypes": ["patch"], "labels": ["type/patch"] },
        { "matchUpdateTypes": ["digest"], "labels": ["type/digest"] },

        // Datasource Labels
        { "matchDatasources": ["github-releases", "github-tags"], "addLabels": ["renovate/github-release"] },
        { "matchDatasources": ["docker"], "addLabels": ["renovate/container"] },
        { "matchDatasources": ["go", "golang-version"], "addLabels": ["renovate/go"] },
        { "matchDatasources": ["helm"], "addLabels": ["renovate/helm"] },
        { "matchDatasources": ["npm", "node-version"], "addLabels": ["renovate/node"] },
        { "matchDatasources": ["pypi", "python-version"], "addLabels": ["renovate/python"] },
        { "matchDatasources": ["rubygems", "ruby-version"], "addLabels": ["renovate/ruby"] },
        { "matchDatasources": ["terraform-module", "terraform-provider"], "addLabels": ["renovate/terraform"] },

        // Manager Labels
        { "matchManagers": ["github-actions"], "addLabels": ["renovate/github-action"] },
        { "matchManagers": ["mise"], "addLabels": ["renovate/mise"] },

        // Semantic Commit Types and Messages
        {
            "matchUpdateTypes": ["major"],
            "semanticCommitType": "feat",
            "commitMessageTopic": "{{depName}}",
            "commitMessagePrefix": "{{semanticCommitType}}({{semanticCommitScope}})!:",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )",
            "commitMessageSuffix": ""
        },
        {
            "matchUpdateTypes": ["minor"],
            "semanticCommitType": "feat",
            "commitMessageTopic": "{{depName}}",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )",
            "commitMessageSuffix": ""
        },
        {
            "matchUpdateTypes": ["patch"],
            "semanticCommitType": "fix",
            "commitMessageTopic": "{{depName}}",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )",
            "commitMessageSuffix": ""
        },
        {
            "matchUpdateTypes": ["digest"],
            "semanticCommitType": "chore",
            "commitMessageTopic": "{{depName}}",
            "commitMessageExtra": "( {{currentDigestShort}} â†’ {{newDigestShort}} )",
            "commitMessageSuffix": ""
        },

        // Semantic Commit DataSource Scopes
        { "matchDatasources": ["docker"], "semanticCommitScope": "container" },
        { "matchDatasources": ["go", "golang-version"], "semanticCommitScope": "go" },
        { "matchDatasources": ["helm"], "semanticCommitScope": "helm" },
        { "matchDatasources": ["npm", "node-version"], "semanticCommitScope": "node" },
        { "matchDatasources": ["pypi", "python-version"], "semanticCommitScope": "python" },
        { "matchDatasources": ["rubygems", "ruby-version"], "semanticCommitScope": "ruby" },
        { "matchDatasources": ["terraform-module", "terraform-provider"], "semanticCommitScope": "terraform" },

        // Semantic Commit Managers Scopes
        { "matchManagers": ["github-actions"], "semanticCommitType": "ci", "semanticCommitScope": "github-action" },
        { "matchManagers": ["mise"], "semanticCommitScope": "mise" }
    ]
}